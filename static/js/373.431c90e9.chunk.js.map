{"version":3,"file":"static/js/373.431c90e9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Contacts-item/contacts-item.module.css?05dc","components/Contacts-item/Contacts-item.jsx","webpack://react-homework-template/./src/components/Contacts-list/contacts-list.module.css?e06a","webpack://react-homework-template/./src/shared/Loader/loader.module.css?e4c5","shared/Loader/Loader.jsx","components/Contacts-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx","shared/Section/Section.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"form_wrapper__Rk-CX\",\"form\":\"form_form__v9NsD\",\"label\":\"form_label__qLsdy\",\"input\":\"form_input__cqeL6\"};","import React, { useState } from \"react\";\n\nimport s from \"./form.module.css\";\nimport { Button } from \"../../shared/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from \"store/contacts/thunk.contacts\";\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { selectAllContacts } from \"store/selectors\";\n\n\nexport const Form =()=> {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectAllContacts)\n    const dispatch = useDispatch();\n\n    const onInputChange = e => {\n        switch (e.currentTarget.name) {\n            case 'name':\n                setName(e.currentTarget.value);\n                break;\n            case 'number':\n                setNumber(e.currentTarget.value);\n                break;\n            default:\n                console.log(e.currentTarget.name + ' is not a valid value');\n        }\n    }\n    \n    const onFormSubmit = e => {\n        e.preventDefault();\n        const newContact = { name, number };\n        \n        if (contacts.some(({ name }) => name === newContact.name)) {\n            alert(`${newContact.name} is already in contacts!`);\n            return;\n        }\n        dispatch(addContactThunk(newContact))\n        formReset();\n    }\n    const formReset = () => {\n        setName('');\n        setNumber('');\n    }\n\n    return (          \n            <div className={s.wrapper}><form className={s.form} onSubmit={onFormSubmit}>  \n                <label className={s.label}>\n                    Name \n                    <input onChange={onInputChange}\n                        value={name}\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label className={s.label}>\n                    Number \n                    <input\n                        onChange={onInputChange}\n                        value={number}\n                        className={s.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <Button type=\"submit\" secondary ><BsFillPersonPlusFill/> Add contact</Button>\n        </form></div>\n    )\n}\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts-item_item__nmReV\",\"name\":\"contacts-item_name__vxGd5\",\"number\":\"contacts-item_number__ekyMC\",\"focus\":\"contacts-item_focus__TgEM-\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Button} from \"../../shared/Button\";\nimport s from './contacts-item.module.css';\n\n\nexport const ContactsItem = ({name, number, deleteHandler}) =>{\n    const onItemMouseOver = (e) => {\n        e.currentTarget.classList.toggle(s.focus);\n    }\n     const onItemMouseleave = (e) => {\n        e.currentTarget.classList.toggle(s.focus);\n    }\n    return (\n        <li onMouseOut={onItemMouseleave} onMouseOver={onItemMouseOver} className={s.item}>\n            <span className={s.name}>{name}</span>\n            <span className={s.number}>{number}</span>\n            <Button  primary type=\"button\" onClickHandler={deleteHandler}>Delete</Button>\n        </li>\n    )\n}\nContactsItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    deleteHandler: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__aQIhg\",\"disabled\":\"contacts-list_disabled__w0x+4\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__b7hYz\"};","import { ThreeDots } from 'react-loader-spinner';\nimport s from './loader.module.css'\nexport const Loader = () => {\n    return (\n        <ThreeDots wrapperClass={ s.loader} color=\"rgb(250, 124, 56)\" width=\"100\"/>\n    )\n}","import { useEffect } from 'react';\nimport { ContactsItem } from '../Contacts-item';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './contacts-list.module.css';\nimport { getContactsThunk, deleteContactThunk } from 'store/contacts/thunk.contacts';\nimport { Loader } from 'shared/Loader';\nimport classNames from 'classnames';\nimport { selectFilteredContacts, selectIsLoading, selectUser } from 'store/selectors';\n\n\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch();\n\n  useEffect(() => {   \n    if (user) {     \n      dispatch(getContactsThunk())\n    }\n  }, [dispatch, user])\n\n  const elements = filteredContacts.map(({ id, name, number }) => (\n    <ContactsItem\n      key={id}\n      name={name}\n      number={number}\n      deleteHandler={() => dispatch(deleteContactThunk(id))}\n    />\n  ));\n    \n  return (\n\n    <>{isLoading && <Loader />}\n    <ul className={classNames(s.list, {[s.disabled]: isLoading})}>{elements}</ul>\n    </>\n    \n  ) \n  \n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__nHxuJ\",\"input\":\"filter_input__sX944\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterAction } from 'store/filter/slice.filter';\nimport { selectFilter } from 'store/selectors';\nimport s from './filter.module.css';\n\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    return (\n\n        <label className={s.label}>\n            Filter:\n            <input\n                onChange={(e)=> dispatch(setFilterAction(e.currentTarget.value))}\n                type=\"text\"\n                value={filter}\n                placeholder='   start typing the name...'\n                className={s.input}\n            ></input>\n        </label>\n    )\n}\n","import { Form } from 'components/Form';\nimport { Section } from 'shared/Section';\nimport { ContactsList } from 'components/Contacts-list';\nimport { Filter } from 'components/Filter';\nimport { selectError, } from 'store/selectors';\nimport {  useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n// import { refreshUserThunk } from 'store/auth/thunk.auth';\n\nexport const ContactsPage = () => {\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <Form />   \n      {error ? <p>Oops, something went wrong, try again later please!</p> :\n      <Section>      \n        <h1 className=\"hidden\">Contacts</h1>\n        <Filter />\n        <ContactsList />     \n      </Section>\n      }\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\",\"primary\":\"button_primary__W0Sas\",\"secondary\":\"button_secondary__ug2P0\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport s from './button.module.css';\n\n\nexport const Button = ({ type, primary = false, secondary = false, onClickHandler = null, children, width = null, height = null }) => {\n\n    return (\n        <button className={classNames(s.btn, {\n            [s.primary]: primary && !secondary,\n            [s.secondary]: secondary,\n        })}\n            style={{width: width, height: height}}\n            type={type}\n            onClick={onClickHandler}>{children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    type: PropTypes.string.isRequired,\n    primary: PropTypes.bool,\n    secondary:PropTypes.bool,\n    onClickHandler: PropTypes.func,\n    children: PropTypes.node.isRequired,\n}","import PropTypes from 'prop-types';\nimport \"./section.css\"\n\nexport const Section= ({ children }) => {\n\treturn <section className=\"section\">{children}</section>;\n}\nSection.propTypes = {\n\tchildren: PropTypes.node,\n}"],"names":["Form","useState","name","setName","number","setNumber","contacts","useSelector","selectAllContacts","dispatch","useDispatch","onInputChange","e","currentTarget","value","console","log","formReset","className","s","onSubmit","preventDefault","newContact","some","alert","addContactThunk","onChange","type","pattern","title","required","Button","secondary","ContactsItem","deleteHandler","onMouseOut","classList","toggle","onMouseOver","primary","onClickHandler","Loader","wrapperClass","color","width","ContactsList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","user","selectUser","useEffect","getContactsThunk","elements","map","id","deleteContactThunk","classNames","Filter","filter","selectFilter","setFilterAction","placeholder","ContactsPage","error","selectError","Section","children","height","style","onClick"],"sourceRoot":""}