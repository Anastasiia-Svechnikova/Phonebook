{"version":3,"file":"static/js/718.76915ce8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","shared/Section/Section.jsx","webpack://react-homework-template/./src/components/Contacts-item/contacts-item.module.css?05dc","components/Contacts-item/Contacts-item.jsx","webpack://react-homework-template/./src/components/Contacts-list/contacts-list.module.css?e06a","webpack://react-homework-template/./src/shared/Loader/loader.module.css?e4c5","shared/Loader/Loader.jsx","components/Contacts-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"form_wrapper__Rk-CX\",\"form\":\"form_form__v9NsD\",\"label\":\"form_label__qLsdy\",\"input\":\"form_input__cqeL6\"};","import React, { useState } from \"react\";\nimport s from \"./form.module.css\";\nimport { Button } from \"../../shared/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from \"store/contacts/thunk.contacts\";\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { selectAllContacts } from \"store/selectors\";\n\n\nexport const Form =()=> {\n    const [contact, setContact] = useState({name: '', number: ''})\n\n    const contacts = useSelector(selectAllContacts)\n    const dispatch = useDispatch();\n\n    const onInputChange = e => {\n        setContact(prevState => {\n            return {...prevState, [e.target.name] : e.target.value}\n        })\n    }\n    \n    const onFormSubmit = e => {\n        e.preventDefault();\n        const newContact = contact\n        \n        if (contacts.some(({ name }) => name === newContact.name)) {\n            alert(`${newContact.name} is already in contacts!`);\n            return;\n        }\n        dispatch(addContactThunk(newContact))\n        formReset();\n    }\n    const formReset = () => {\n        setContact({name: '', number: ''})\n    }\n\n    return (          \n        <div className={s.wrapper}>\n            <form className={s.form} onSubmit={onFormSubmit}>  \n                <label className={s.label}>\n                    Name \n                    <input onChange={onInputChange}\n                        value={contact.name}\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label className={s.label}>\n                    Number \n                    <input\n                        onChange={onInputChange}\n                        value={contact.number}\n                        className={s.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <Button type=\"submit\" width={130} primary ><BsFillPersonPlusFill/> Add contact</Button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n","import PropTypes from 'prop-types';\nimport \"./section.css\"\n\nexport const Section= ({ children }) => {\n\treturn <section className=\"section\">{children}</section>;\n}\nSection.propTypes = {\n\tchildren: PropTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts-item_item__nmReV\",\"name\":\"contacts-item_name__vxGd5\",\"number\":\"contacts-item_number__ekyMC\",\"focus\":\"contacts-item_focus__TgEM-\",\"editIcon\":\"contacts-item_editIcon__g-vRt\",\"done\":\"contacts-item_done__eF4pz\",\"deleteIcon\":\"contacts-item_deleteIcon__exdXv\",\"form\":\"contacts-item_form__EOrr1\",\"input\":\"contacts-item_input__df-pr\",\"nameLabel\":\"contacts-item_nameLabel__qXosn\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Button} from \"../../shared/Button\";\nimport s from './contacts-item.module.css';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContactThunk, editContactThunk } from \"store/contacts/thunk.contacts\";\nimport { BiPencil } from 'react-icons/bi';\nimport { TbTrashX } from 'react-icons/tb';\nimport {BsCheckSquareFill } from 'react-icons/bs';\n\n\n\n\n\n\n\nexport const ContactsItem = ({id, name, number}) => {\n    const [openEdit, setOpenEdit] = useState(false)\n    const [editedContact, setEditedContact] = useState({ name, number })\n      const dispatch = useDispatch();\n    const editNumber = () => {\n        setOpenEdit(true)\n    }\n    const onInputChange = e => {\n        setEditedContact(prevState => {\n            return {...prevState, [e.target.name] : e.target.value}\n        })\n    }\n\n    const handleEditSubmit = (e) => {\n        e.preventDefault()\n        dispatch(editContactThunk({id, editedContact}))\n          setOpenEdit(false)\n    }\n    const handleDelete = () => {\n        dispatch(deleteContactThunk(id))\n    }\n\n    const onItemMouseOver = (e) => {\n        e.currentTarget.classList.toggle(s.focus);\n    }\n     const onItemMouseleave = (e) => {\n        e.currentTarget.classList.toggle(s.focus);\n    }\n    return (\n        <li onMouseOut={onItemMouseleave} onMouseOver={onItemMouseOver} className={s.item}>\n            \n            {openEdit ?\n                <form className={s.form} onSubmit={handleEditSubmit}>  \n                    <Button type=\"submit\" width={40} secondary>  <BsCheckSquareFill className={s.done} /></Button>\n                <label className={s.nameLabel}>\n                    <input\n                        onChange={onInputChange}\n                        value={editedContact.name}\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                    />\n                </label>\n                <label >\n                    <input\n                        onChange={onInputChange}\n                        value={editedContact.number}\n                        className={s.input}\n                        type=\"tel\"\n                        name=\"number\"\n                    />\n                </label>                \n            </form> :\n                <>\n                    <Button width={40} secondary type=\"button\" onClickHandler={editNumber}><BiPencil className={s.editIcon } /></Button>\n                    <span className={s.name}>{name}</span>\n                    <span className={s.number}>{number}</span>\n                    <Button primary type=\"button\" width={ 40} onClickHandler={handleDelete}><TbTrashX className={s.deleteIcon}/></Button>\n                    \n                </>}\n            \n        </li>\n    )\n}\n\n\nContactsItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    // deleteHandler: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__aQIhg\",\"disabled\":\"contacts-list_disabled__w0x+4\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__b7hYz\"};","import { ThreeDots } from 'react-loader-spinner';\nimport s from './loader.module.css'\nexport const Loader = () => {\n    return (\n        <ThreeDots wrapperClass={ s.loader} color=\"rgb(250, 124, 56)\" width=\"100\"/>\n    )\n}","import { useEffect } from 'react';\nimport { ContactsItem } from '../Contacts-item';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './contacts-list.module.css';\nimport { getContactsThunk} from 'store/contacts/thunk.contacts';\nimport { Loader } from 'shared/Loader';\nimport classNames from 'classnames';\nimport { selectFilteredContacts, selectIsLoading, selectUser } from 'store/selectors';\n\n\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch();\n\n  useEffect(() => {   \n    if (user) {     \n      dispatch(getContactsThunk())\n    }\n  }, [dispatch, user])\n\n  const elements = filteredContacts.map(({ id, name, number }) => (\n    <ContactsItem\n      key={id}\n      name={name}\n      number={number}\n      id ={id}\n    />\n  ));\n    \n  return (\n\n    <>{isLoading && <Loader />}\n    <ul className={classNames(s.list, {[s.disabled]: isLoading})}>{elements}</ul>\n    </>\n    \n  ) \n  \n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__nHxuJ\",\"input\":\"filter_input__sX944\",\"search\":\"filter_search__APBfY\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterAction } from 'store/filter/slice.filter';\nimport { selectFilter } from 'store/selectors';\nimport s from './filter.module.css';\nimport { BiSearch } from 'react-icons/bi';\n\n\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    return (\n\n        <label className={s.label}>\n             <BiSearch className={s.search } />\n            <input\n                onChange={(e)=> dispatch(setFilterAction(e.currentTarget.value))}\n                type=\"text\"\n                value={filter}\n                placeholder='   start typing the name...'\n                className={s.input}\n            ></input>\n        </label>\n    )\n}\n","import { Form } from 'components/Form';\nimport { Section } from 'shared/Section';\nimport { ContactsList } from 'components/Contacts-list';\nimport { Filter } from 'components/Filter';\nimport { selectError, } from 'store/selectors';\nimport {  useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n// import { refreshUserThunk } from 'store/auth/thunk.auth';\n\nexport const ContactsPage = () => {\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <Form />   \n      {error ? <p>Oops, something went wrong, try again later please!</p> :\n      <Section>      \n        <h1 className=\"hidden\">Contacts</h1>\n        <Filter />\n        <ContactsList />     \n      </Section>\n      }\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\",\"primary\":\"button_primary__W0Sas\",\"secondary\":\"button_secondary__ug2P0\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport s from './button.module.css';\n\n\nexport const Button = ({ type, primary = false, secondary = false, onClickHandler = null, children, width = null, height = null }) => {\n\n    return (\n        <button className={classNames(s.btn, {\n            [s.primary]: primary && !secondary,\n            [s.secondary]: secondary,\n        })}\n            style={{width: width, height: height}}\n            type={type}\n            onClick={onClickHandler}>{children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    type: PropTypes.string.isRequired,\n    primary: PropTypes.bool,\n    secondary:PropTypes.bool,\n    onClickHandler: PropTypes.func,\n    children: PropTypes.node.isRequired,\n}"],"names":["Form","useState","name","number","contact","setContact","contacts","useSelector","selectAllContacts","dispatch","useDispatch","onInputChange","e","prevState","target","value","formReset","className","s","onSubmit","preventDefault","newContact","some","alert","addContactThunk","onChange","type","pattern","title","required","Button","width","primary","Section","children","ContactsItem","id","openEdit","setOpenEdit","editedContact","setEditedContact","onMouseOut","currentTarget","classList","toggle","onMouseOver","editContactThunk","secondary","onClickHandler","deleteContactThunk","Loader","wrapperClass","color","ContactsList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","user","selectUser","useEffect","getContactsThunk","elements","map","classNames","Filter","filter","selectFilter","setFilterAction","placeholder","ContactsPage","error","selectError","height","style","onClick"],"sourceRoot":""}