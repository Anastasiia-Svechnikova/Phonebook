{"version":3,"file":"static/js/270.2b3f1493.chunk.js","mappings":"+NACA,GAAgB,QAAU,2BAA2B,UAAY,6BAA6B,WAAa,8BAA8B,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,SAAW,4BAA4B,OAAS,0BAA0B,IAAM,wB,sECS3WA,EAAY,WACrB,OAAwBC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,KAAxD,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,YAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAoB,SAACC,GACvBN,GAAQ,SAAAO,GAAe,OAAO,kBAAKA,GAAZ,cAAuBD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOE,OAAS,GAClF,EAWD,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,UAAhB,UACI,gBAAID,UAAWC,EAAAA,MAAf,8BAAwC,iBAAMD,UAAWC,EAAAA,KAAjB,6BAE5C,gBAAKD,UAAWC,EAAAA,WAAhB,UACI,kBAAMC,SAAU,SAACP,GAAD,OAhBH,SAACA,GACtBA,EAAEQ,iBACFX,GAASY,EAAAA,EAAAA,IAAehB,IAAOiB,SAASC,MAAK,kBAAKC,EAAAA,GAAAA,QAAc,WAAnB,GAChD,CAagCC,CAAiBb,EAAtB,EAA0BK,UAAWC,EAAAA,KAArD,WACI,4BAEI,kBAAOD,UAAWC,EAAAA,MACdQ,SAAU,SAACd,GAAD,OAAMD,EAAkBC,EAAxB,EACVI,MAAOX,EAAKF,MACZwB,KAAK,OACLZ,KAAK,QACLa,YAAY,SACZC,QAAQ,gCACRC,MAAM,mBACVC,UAAQ,OAEZ,mBAAOd,UAAWC,EAAAA,SAAlB,WAEI,kBAAOD,UAAWC,EAAAA,MACdQ,SAAU,SAACd,GAAD,OAAMD,EAAkBC,EAAxB,EACRI,MAAOX,EAAKD,SACduB,KAAMpB,EACNQ,KAAK,WACLa,YAAY,WACZC,QAAQ,uCACRC,MAAM,6GACNC,UAAQ,KACR,oBAAQC,QApCN,WACtBxB,GAAe,SAAAK,GAAS,MAAkB,aAAdA,EAA0B,OAAQ,UAAtC,GAC3B,EAkC2DI,UAAWC,EAAAA,OAAUS,KAAK,SAA9D,UAAwF,aAAhBpB,GAA4B,SAAC,MAAD,CAAoBU,UAAWC,EAAAA,OAAU,SAAE,MAAF,CAAYD,UAAWC,EAAAA,MAApK,WAER,SAACe,EAAA,EAAD,CAAQhB,UAAWC,EAAAA,IAAOgB,MAAO,OAAQC,OAAQ,GAAIR,KAAK,SAASS,SAAO,EAA1E,qBACA,SAAC,KAAD,CAAMnB,UAAWC,EAAAA,KAAQmB,GAAG,YAA5B,gDAKnB,C,wFClED,EAAsB,oBAAtB,EAAoD,wBAApD,EAAwF,0B,UCI3EJ,EAAS,SAAC,GAAgH,IAAD,EAA7GN,EAA6G,EAA7GA,KAA6G,IAAvGS,QAAAA,OAAuG,aAAtFE,UAAAA,OAAsF,aAAnEC,eAAAA,OAAmE,MAAlD,KAAkD,EAA5CC,EAA4C,EAA5CA,SAA4C,IAAlCN,MAAAA,OAAkC,MAA1B,KAA0B,MAApBC,OAAAA,OAAoB,MAAX,KAAW,EAElI,OACI,mBAAQlB,UAAWwB,IAAWvB,GAAD,eACxBA,EAAYkB,IAAYE,IADA,SAExBpB,EAAcoB,GAFU,IAIzBI,MAAO,CAACR,MAAOA,EAAOC,OAAQA,GAC9BR,KAAMA,EACNK,QAASO,EANb,SAM8BC,GAGrC,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/loginPage.module.css?3459","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"loginPage_wrapper__dgHhG\",\"innerLeft\":\"loginPage_innerLeft__ETQfp\",\"innerRight\":\"loginPage_innerRight__1SWSM\",\"logo\":\"loginPage_logo__aWLJl\",\"title\":\"loginPage_title__VXOez\",\"form\":\"loginPage_form__tsZfe\",\"input\":\"loginPage_input__WQBOe\",\"link\":\"loginPage_link__9fffL\",\"password\":\"loginPage_password__eDyvH\",\"eyeBtn\":\"loginPage_eyeBtn__5hhy6\",\"eye\":\"loginPage_eye__Lupa+\"};","import { Button } from \"shared/Button\"\nimport s from './loginPage.module.css';\nimport {Link} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUserThunk } from \"store/auth/thunk.auth\";\nimport { AiFillEye } from 'react-icons/ai';\nimport { AiFillEyeInvisible } from 'react-icons/ai';\nimport { toast} from 'react-toastify';\n\nexport const LoginPage = () => {\n    const [user, setUser] = useState({ email: '', password: '' });\n    const [passwordBtn, setPasswordBtn] = useState('password');\n    const dispatch = useDispatch();\n\n\n    const handleInputChange = (e) => {\n        setUser(prevState => { return { ...prevState,[e.target.name]:e.target.value } })\n    }\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(loginUserThunk(user)).unwrap().then(()=> toast.success('Welcome!'))\n    }\n    const handlePasswordBtn = () => {\n        setPasswordBtn(prevState=>  prevState === 'password'? 'text': 'password')\n    }\n\n\n\n    return (\n        <div className={s.wrapper}>\n            <div className={s.innerLeft}>\n                <h1 className={s.title}>Welcome to Your <span className={s.logo}>PhoneBook</span></h1>\n            </div>\n            <div className={s.innerRight}>\n                <form onSubmit={(e)=>handleFormSubmit(e)} className={s.form}>\n                    <label>\n\n                        <input className={s.input}\n                            onChange={(e)=> handleInputChange(e)}\n                            value={user.email}\n                            type=\"mail\"\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n                            pattern=\"[a-z0-9]+@[a-z]+\\.[a-z]{2,3}\"\n                            title=\"example@mail.com\"\n                        required/>\n                    </label>\n                    <label className={s.password}>\n\n                        <input className={s.input}\n                            onChange={(e)=> handleInputChange(e)}\n                              value={user.password}\n                            type={passwordBtn}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 5 or more characters\"\n                            required />\n                            <button onClick={handlePasswordBtn} className={s.eyeBtn} type=\"button\">{passwordBtn === 'password'? <AiFillEyeInvisible className={s.eye }/>:< AiFillEye className={s.eye }/>} </button>\n                    </label>\n                    <Button className={s.btn} width={'100%'} height={40} type=\"submit\" primary>Log In</Button>\n                    <Link className={s.link} to='/register'>Haven't got an account yet?</Link>\n                </form>\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\",\"primary\":\"button_primary__W0Sas\",\"secondary\":\"button_secondary__ug2P0\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport s from './button.module.css';\n\n\nexport const Button = ({ type, primary = false, secondary = false, onClickHandler = null, children, width = null, height = null }) => {\n\n    return (\n        <button className={classNames(s.btn, {\n            [s.primary]: primary && !secondary,\n            [s.secondary]: secondary,\n        })}\n            style={{width: width, height: height}}\n            type={type}\n            onClick={onClickHandler}>{children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    type: PropTypes.string.isRequired,\n    primary: PropTypes.bool,\n    secondary:PropTypes.bool,\n    onClickHandler: PropTypes.func,\n    children: PropTypes.node.isRequired,\n}"],"names":["LoginPage","useState","email","password","user","setUser","passwordBtn","setPasswordBtn","dispatch","useDispatch","handleInputChange","e","prevState","target","name","value","className","s","onSubmit","preventDefault","loginUserThunk","unwrap","then","toast","handleFormSubmit","onChange","type","placeholder","pattern","title","required","onClick","Button","width","height","primary","to","secondary","onClickHandler","children","classNames","style"],"sourceRoot":""}