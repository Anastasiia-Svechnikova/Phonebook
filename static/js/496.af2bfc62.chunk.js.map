{"version":3,"file":"static/js/496.af2bfc62.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/RegisterPage/registerPage.module.css?4c7c","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"registerPage_wrapper__oeBpb\",\"innerLeft\":\"registerPage_innerLeft__9EtQ9\",\"innerRight\":\"registerPage_innerRight__IL4QY\",\"logo\":\"registerPage_logo__OWcoY\",\"title\":\"registerPage_title__XEc6N\",\"form\":\"registerPage_form__qnWe3\",\"input\":\"registerPage_input__sF4Mk\",\"password\":\"registerPage_password__a37tr\",\"eyeBtn\":\"registerPage_eyeBtn__IHbDl\",\"eye\":\"registerPage_eye__qkXFp\",\"link\":\"registerPage_link__C6d1a\"};","import { Button } from \"shared/Button\"\nimport s from './registerPage.module.css';\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { AiFillEye } from 'react-icons/ai';\nimport { AiFillEyeInvisible} from 'react-icons/ai';\nimport { useDispatch } from \"react-redux\";\nimport { registerUserThunk } from \"store/auth/thunk.auth\";\nimport { toast } from \"react-toastify\";\n\n\n\nexport const RegisterPage = () => {\n    const [user, setUser] = useState({ name: '', email: '', password: '' });\n    const [passwordBtn, setPasswordBtn] = useState('password');\n    const dispatch = useDispatch();\n\n    const handleInputChange = (e) => {\n        setUser(prevState => { return { ...prevState,[e.target.name]:e.target.value } })\n    }\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(registerUserThunk(user)).unwrap().then(()=> toast.success('Welcome!'))\n    }\n    const handlePasswordBtn = () => {\n        setPasswordBtn(prevState=>  prevState === 'password'? 'text': 'password')\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <div className={s.innerLeft}>\n                <h1 className={s.title}>Welcome to Your <span className={s.logo}>PhoneBook</span></h1>\n            </div>\n            <div className={s.innerRight}>\n                <form onSubmit={(e)=>handleFormSubmit(e)} className={s.form}>\n                    <label>\n                        <input className={s.input}\n                            onChange={(e)=> handleInputChange(e)}\n                            value={user.name}\n                            type=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            \n                        required/>\n                    </label>\n\n                    <label>\n                        <input className={s.input}\n                             onChange={(e)=> handleInputChange(e)}\n                            value={user.email}\n                            type=\"mail\"\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n                            pattern=\"[a-z0-9]+@[a-z]+\\.[a-z]{2,3}\"\n                            title=\"example@mail.com\"\n                        required/>\n                    </label>\n                    <label className={s.password}>\n\n                        <input className={s.input}\n                             onChange={(e)=> handleInputChange(e)}\n                            value={user.password}\n                            type={passwordBtn}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 5 or more characters\"\n                            required />\n                        <button onClick={handlePasswordBtn} className={s.eyeBtn} type=\"button\">{passwordBtn === 'password'? <AiFillEyeInvisible className={s.eye }/>:< AiFillEye className={s.eye }/>} </button>\n                    </label>\n                    <Button width={252} height={40} type=\"submit\" secondary> Register</Button>\n                     <Link className={s.link} to='/login'>Already have an account?</Link>\n                </form>\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\",\"primary\":\"button_primary__W0Sas\",\"secondary\":\"button_secondary__ug2P0\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport s from './button.module.css';\n\n\nexport const Button = ({ type, primary = false, secondary = false, onClickHandler = null, children, width = null, height = null }) => {\n\n    return (\n        <button className={classNames(s.btn, {\n            [s.primary]: primary && !secondary,\n            [s.secondary]: secondary,\n        })}\n            style={{width: width, height: height}}\n            type={type}\n            onClick={onClickHandler}>{children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    type: PropTypes.string.isRequired,\n    primary: PropTypes.bool,\n    secondary:PropTypes.bool,\n    onClickHandler: PropTypes.func,\n    children: PropTypes.node.isRequired,\n}","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["RegisterPage","useState","name","email","password","user","setUser","passwordBtn","setPasswordBtn","dispatch","useDispatch","handleInputChange","e","prevState","target","value","className","s","onSubmit","preventDefault","registerUserThunk","unwrap","then","toast","handleFormSubmit","onChange","type","placeholder","required","pattern","title","onClick","Button","width","height","secondary","to","primary","onClickHandler","children","classNames","style","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default"],"sourceRoot":""}