{"version":3,"file":"static/js/683.e17c9ef7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","shared/Section/Section.jsx","webpack://react-homework-template/./src/components/Contacts-item/contacts-item.module.css?05dc","webpack://react-homework-template/./src/components/MobileItem/mobileItem.module.css?200a","components/MobileItem/MobileItem.jsx","webpack://react-homework-template/./src/components/MobileEditItem/mobileEditItem.module.css?3044","components/MobileEditItem/MobileEditItem.jsx","components/Contacts-item/Contacts-item.jsx","webpack://react-homework-template/./src/components/Contacts-list/contacts-list.module.css?e06a","webpack://react-homework-template/./src/shared/Loader/loader.module.css?e4c5","shared/Loader/Loader.jsx","components/Contacts-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Instructions/instructions.module.css?47cb","components/Instructions/Instructions.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"form_wrapper__Rk-CX\",\"form\":\"form_form__v9NsD\",\"label\":\"form_label__qLsdy\",\"input\":\"form_input__cqeL6\"};","import React, { useState } from \"react\";\nimport s from \"./form.module.css\";\nimport { toast} from 'react-toastify';\nimport { Button } from \"../../shared/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from \"store/contacts/thunk.contacts\";\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { selectAllContacts } from \"store/selectors\";\n\n\n\nexport const Form =()=> {\n    const [contact, setContact] = useState({name: '', number: ''})\n\n    const contacts = useSelector(selectAllContacts)\n    const dispatch = useDispatch();\n\n    const onInputChange = e => {\n        setContact(prevState => {\n            return {...prevState, [e.target.name] : e.target.value}\n        })\n    }\n    \n    const onFormSubmit = e => {\n        e.preventDefault();\n        const newContact = contact\n        \n        if (contacts.some(({ name }) => name === newContact.name)) {\n            toast.warn(`${newContact.name} is already in contacts!`, {\n               autoClose: 4000,\nhideProgressBar: true,\n           });\n            return;\n        }\n        dispatch(addContactThunk(newContact))\n        formReset();\n    }\n    const formReset = () => {\n        setContact({name: '', number: ''})\n    }\n\n    return (          \n        <div className={s.wrapper}>\n            <form className={s.form} onSubmit={onFormSubmit}>  \n                <label className={s.label}>\n                    Name \n                    <input onChange={onInputChange}\n                        value={contact.name}\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label className={s.label}>\n                    Number \n                    <input\n                        onChange={onInputChange}\n                        value={contact.number}\n                        className={s.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <Button type=\"submit\" width={130} primary ><BsFillPersonPlusFill/> Add contact</Button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n","import PropTypes from 'prop-types';\nimport \"./section.css\"\n\nexport const Section= ({ children }) => {\n\treturn <section className=\"section\">{children}</section>;\n}\nSection.propTypes = {\n\tchildren: PropTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts-item_item__nmReV\",\"name\":\"contacts-item_name__vxGd5\",\"number\":\"contacts-item_number__ekyMC\",\"focus\":\"contacts-item_focus__TgEM-\",\"editIcon\":\"contacts-item_editIcon__g-vRt\",\"done\":\"contacts-item_done__eF4pz\",\"deleteIcon\":\"contacts-item_deleteIcon__exdXv\",\"form\":\"contacts-item_form__EOrr1\",\"input\":\"contacts-item_input__df-pr\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"mobileItem_item__ji8hu\",\"editIcon\":\"mobileItem_editIcon__HuSgu\",\"deleteIcon\":\"mobileItem_deleteIcon__HDYjv\",\"name\":\"mobileItem_name__NcQt1\",\"number\":\"mobileItem_number__KRufD\"};","import { BiPencil } from 'react-icons/bi';\nimport { TbTrashX } from 'react-icons/tb';\nimport { Button } from 'shared/Button';\nimport s from './mobileItem.module.css';\n\nexport const MobileItem = ({ editNumber, handleDelete, name, number }) => {\n  return (\n    <li className={s.item}>\n          <div className={s.inner}>             \n          <p className={s.name}>{name}</p>\n      <p className={s.number}>{number}</p>\n          </div>\n          <div className={s.inner}>\n              \n      <Button width={40} secondary type=\"button\" onClickHandler={editNumber}><BiPencil className={s.editIcon } /></Button>\n      <Button primary type=\"button\" width={40} onClickHandler={handleDelete}>\n        <TbTrashX className={s.deleteIcon} />\n      </Button>\n          </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"mobileEditItem_form__qKHD-\",\"done\":\"mobileEditItem_done__X01E5\",\"input\":\"mobileEditItem_input__9Vboi\",\"btnWrapper\":\"mobileEditItem_btnWrapper__gor4j\"};","import { BsCheckSquareFill } from \"react-icons/bs\"\nimport { Button } from \"shared/Button\"\nimport s from \"./mobileEditItem.module.css\"\n\nexport const MobileEditItem = ({handleEditSubmit, onInputChange, name, number}) => {\n    return (\n        <form className={s.form} onSubmit={handleEditSubmit}>\n      <label>\n        <input\n          onChange={onInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n        />\n      </label>\n      <label>\n        <input\n          onChange={onInputChange}\n          value={number}\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n        />\n            </label>\n            <div className={s.btnWrapper}>\n\n      <Button type=\"submit\" width={40} secondary>\n        {' '}\n        <BsCheckSquareFill className={s.done} />\n      </Button>\n            </div>\n    </form>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './contacts-item.module.css';\nimport { Button } from '../../shared/Button';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteContactThunk,\n  editContactThunk,\n} from 'store/contacts/thunk.contacts';\nimport { BiPencil } from 'react-icons/bi';\nimport { TbTrashX } from 'react-icons/tb';\nimport { BsCheckSquareFill } from 'react-icons/bs';\nimport { useMediaQuery } from 'react-responsive';\nimport { MobileItem } from 'components/MobileItem/MobileItem';\nimport { MobileEditItem } from 'components/MobileEditItem';\n\nexport const ContactsItem = ({ id, name, number }) => {\n  const [openEdit, setOpenEdit] = useState(false);\n  const [editedContact, setEditedContact] = useState({ name, number });\n  const dispatch = useDispatch();\n  const isMobile = useMediaQuery({\n    query: '(max-width: 600px)',\n  });\n\n  const editNumber = () => {\n    setOpenEdit(true);\n  };\n  const onInputChange = e => {\n    setEditedContact(prevState => {\n      return { ...prevState, [e.target.name]: e.target.value };\n    });\n  };\n\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    dispatch(editContactThunk({ id, editedContact }));\n    setOpenEdit(false);\n  };\n  const handleDelete = () => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  const onItemMouseOver = e => {\n    e.currentTarget.classList.toggle(s.focus);\n  };\n  const onItemMouseleave = e => {\n    e.currentTarget.classList.toggle(s.focus);\n  };\n  return !openEdit ? (\n    isMobile ? (\n      <MobileItem\n        editNumber={editNumber}\n        handleDelete={handleDelete}\n        name={name}\n        number={number}\n      />\n    ) : (\n      <li\n        onMouseOut={onItemMouseleave}\n        onMouseOver={onItemMouseOver}\n        className={s.item}\n      >\n        <Button width={40} secondary type=\"button\" onClickHandler={editNumber}>\n          <BiPencil className={s.editIcon} />\n        </Button>\n        <span className={s.name}>{name}</span>\n        <span className={s.number}>{number}</span>\n        <Button primary type=\"button\" width={40} onClickHandler={handleDelete}>\n          <TbTrashX className={s.deleteIcon} />\n        </Button>\n      </li>\n    )\n  ) : (\n          isMobile ? <MobileEditItem\n              handleEditSubmit={handleEditSubmit}\n              name={editedContact.name}\n              number={editedContact.number}\n              onInputChange={onInputChange}\n          /> :\n    <form className={s.form} onSubmit={handleEditSubmit}>\n      <Button type=\"submit\" width={40} secondary>\n        {' '}\n        <BsCheckSquareFill className={s.done} />\n      </Button>\n      <label>\n        <input\n          onChange={onInputChange}\n          value={editedContact.name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n        />\n      </label>\n      <label>\n        <input\n          onChange={onInputChange}\n          value={editedContact.number}\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n        />\n      </label>\n    </form>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  // deleteHandler: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__aQIhg\",\"disabled\":\"contacts-list_disabled__w0x+4\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__b7hYz\"};","import { ThreeDots } from 'react-loader-spinner';\nimport s from './loader.module.css'\nexport const Loader = () => {\n    return (\n        <ThreeDots wrapperClass={ s.loader} color=\"rgb(250, 124, 56)\" width=\"100\"/>\n    )\n}","import { useEffect } from 'react';\nimport { ContactsItem } from '../Contacts-item';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './contacts-list.module.css';\nimport { getContactsThunk} from 'store/contacts/thunk.contacts';\nimport { Loader } from 'shared/Loader';\nimport classNames from 'classnames';\nimport { selectFilteredContacts, selectIsLoading, selectUser } from 'store/selectors';\n\n\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch();\n\n  useEffect(() => {   \n    if (user) {     \n      dispatch(getContactsThunk())\n    }\n  }, [dispatch, user])\n\n  const elements = filteredContacts.map(({ id, name, number }) => (\n    <ContactsItem\n      key={id}\n      name={name}\n      number={number}\n      id ={id}\n    />\n  ));\n    \n  return (\n\n    <>{isLoading && <Loader />}\n    <ul className={classNames(s.list, {[s.disabled]: isLoading})}>{elements}</ul>\n    </>\n    \n  ) \n  \n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__nHxuJ\",\"input\":\"filter_input__sX944\",\"search\":\"filter_search__APBfY\",\"mui\":\"filter_mui__XGnLO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterAction } from 'store/filter/slice.filter';\nimport { selectFilter } from 'store/selectors';\nimport s from './filter.module.css';\nimport { BiSearch } from 'react-icons/bi';\n\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <label className={s.label}>\n        <BiSearch className={s.search} />\n        <input\n          onChange={e => dispatch(setFilterAction(e.currentTarget.value))}\n          type=\"text\"\n          value={filter}\n          placeholder=\"   start typing the name...\"\n          className={s.input}\n        ></input>\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"instructions_wrapper__hYrrA\",\"wrapperText\":\"instructions_wrapperText__EUT0F\"};","import s from './instructions.module.css'\n\nexport const Instructions = () => {\n    return (\n        <div className={s.wrapper}>\n            <p className={s.wrapperText}>Oops... It's empty here!</p>\n            <p>You can add your first contact using the form above</p>\n        </div>\n    )\n}","import { Form } from 'components/Form';\nimport { Section } from 'shared/Section';\nimport { ContactsList } from 'components/Contacts-list';\nimport { Filter } from 'components/Filter';\nimport { selectAllContacts, selectError, selectIsLoading, } from 'store/selectors';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { Instructions } from 'components/Instructions';\nimport { useEffect } from 'react';\nimport { getContactsThunk } from 'store/contacts/thunk.contacts';\n\n\n\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch()\nuseEffect(() => {\n  dispatch(getContactsThunk())\n  \n}, [dispatch])\n\n\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectAllContacts)\n  const isLoading = useSelector(selectIsLoading)\n  const isEmpty = !isLoading && !contacts.length\n  console.log(isEmpty)\n  return (\n    <div>\n      <Form />   \n      {error ? <p>Oops, something went wrong, try again later please!</p> :\n      <Section>      \n          {isEmpty ? <Instructions /> :\n            <>\n        <h1 className=\"hidden\">Contacts</h1>\n        <Filter />\n          <ContactsList />\n            </>\n          }\n      </Section>\n      }\n      \n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\",\"primary\":\"button_primary__W0Sas\",\"secondary\":\"button_secondary__ug2P0\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport s from './button.module.css';\n\n\nexport const Button = ({ type, primary = false, secondary = false, onClickHandler = null, children, width = null, height = null }) => {\n\n    return (\n        <button className={classNames(s.btn, {\n            [s.primary]: primary && !secondary,\n            [s.secondary]: secondary,\n        })}\n            style={{width: width, height: height}}\n            type={type}\n            onClick={onClickHandler}>{children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    type: PropTypes.string.isRequired,\n    primary: PropTypes.bool,\n    secondary:PropTypes.bool,\n    onClickHandler: PropTypes.func,\n    children: PropTypes.node.isRequired,\n}"],"names":["Form","useState","name","number","contact","setContact","contacts","useSelector","selectAllContacts","dispatch","useDispatch","onInputChange","e","prevState","target","value","formReset","className","s","onSubmit","preventDefault","newContact","some","toast","autoClose","hideProgressBar","addContactThunk","onChange","type","pattern","title","required","Button","width","primary","Section","children","MobileItem","editNumber","handleDelete","secondary","onClickHandler","MobileEditItem","handleEditSubmit","ContactsItem","id","openEdit","setOpenEdit","editedContact","setEditedContact","isMobile","useMediaQuery","query","editContactThunk","deleteContactThunk","onMouseOut","currentTarget","classList","toggle","onMouseOver","Loader","wrapperClass","color","ContactsList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","user","selectUser","useEffect","getContactsThunk","elements","map","classNames","Filter","filter","selectFilter","setFilterAction","placeholder","Instructions","ContactsPage","error","selectError","isEmpty","length","console","log","height","style","onClick"],"sourceRoot":""}